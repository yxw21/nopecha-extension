name: Build nopecha extension
on:
  schedule:
    - cron:  '0 0 * * 1'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'nopecha-ai/nopecha-extension'
      - name: Setup
        uses: actions/setup-python@v4
      - name: Build
        run: python build.py
      - name: Update dev-api to api
        run: |
          for file in `grep -l dev-api dist/*/*js`; do
            sed -i 's/dev-api/api/g' $file
          done
      - name: Tar and Gzip
        run: |
          tar -cvf dist.tar dist && gzip dist.tar
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          version=$(cat manifest.base.json | grep version | head -n 1 | grep -P '\d+\.\d+\.\d+' -o)
          curl -s \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer "$GITHUB_TOKEN""\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            -d '{"tag_name":"v'$version'","target_commitish":"master","name":"v'$version'","body":"Release '$version'","draft":false,"prerelease":false,"generate_release_notes":false}' > /tmp/release.json
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          id=$(cat /tmp/release.json | grep id | head -n 1 | grep -P '\d+' -o)
          file=dist.tar.gz
          curl -s \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer "$GITHUB_TOKEN""\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: $(file -b --mime-type $file)" \
            --data-binary @$file \
            https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$id/assets?name=$file
